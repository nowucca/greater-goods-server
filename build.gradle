plugins {
    id 'java'
    id 'war'
}

sourceCompatibility = 11
repositories {
    mavenCentral()
}

dependencies {
    ext.tomcatVersion = '9.0.65'
    ext.slf4jVersion = '1.7.26'
    ext.jacksonVersion = '2.8.4'
    ext.jerseyVersion = '2.37'
    ext.guavaVersion = '31.1-jre'
    ext.taglibVersion = '1.2.5'
    ext.mySqlConnectorVersion = '8.0.31'


    // Using sfl4j allows us to replace different loggers later, if desired
    implementation group: 'org.slf4j', name:'slf4j-api', version: "$slf4jVersion"

    // slf4j is just a facade for loggers. To actually get logging to work, you need to
    // tie it in with some actual implementation, e.g., log4j2, logback or slf4j-simple
    implementation group: 'org.slf4j', name:'slf4j-simple', version: "$slf4jVersion"

    // These are for model object caching in the dao layer
    implementation group: 'com.google.guava', name: 'guava', version: "$guavaVersion"

    // These declare dependencies on tomcat libraries, letting us use container code.
    // These may be necessary if we want to run tomcat using a plugin in future.
    implementation group: 'org.apache.tomcat', name: 'tomcat-catalina', version: "$tomcatVersion"

    // These let us use the standard tag libraries in our JSP files.
    implementation group: 'org.apache.taglibs', name: 'taglibs-standard-spec', version: "$taglibVersion"
    implementation group: 'org.apache.taglibs', name: 'taglibs-standard-impl', version: "$taglibVersion"
    implementation group: 'com.mysql', name: 'mysql-connector-j', version: "$mySqlConnectorVersion"


    ext.webDriverManagerVersion = '5.3.0'
    ext.seleniumJavaVersion = '4.5.3'
    ext.junitVersion = '4.12'

    // These let us run tests using web driver / selenium testing.
    testImplementation group: 'io.github.bonigarcia', name: 'webdrivermanager', version: "$webDriverManagerVersion"
    testImplementation group: 'org.seleniumhq.selenium', name: 'selenium-java', version: "$seleniumJavaVersion"
    testImplementation group: 'junit', name: 'junit', version: "$junitVersion"

    ext.jacksonVersion = '2.13.4'

    //Jersey / JSON REST service dependencies
    implementation group: 'com.fasterxml.jackson.core', name:'jackson-core', version:"$jacksonVersion"
    implementation group: 'com.fasterxml.jackson.core', name:'jackson-databind', version:"$jacksonVersion"
    implementation group: 'org.glassfish.jersey.media', name: 'jersey-media-json-jackson', version:"$jacksonVersion"
    implementation group: 'org.glassfish.jersey.containers', name:'jersey-container-servlet', version:"$jerseyVersion"
    implementation group: 'org.glassfish.jersey.media', name:'jersey-media-json-jackson', version:"$jerseyVersion"
    implementation group: 'org.glassfish.jersey.core', name:'jersey-server', version:"$jerseyVersion"
    implementation group: 'org.glassfish.jersey.inject', name: 'jersey-hk2', version: "$jerseyVersion"
    implementation group: 'javax.ws.rs', name:'javax.ws.rs-api', version:'2.0.1'

    // JAX-B dependencies for JDK 9+
    implementation group: 'javax.xml.bind', name: 'jaxb-api', version: '2.3.1'
    implementation group: 'com.sun.xml.bind', name: 'jaxb-core', version: '2.2.11'
    implementation group: 'com.sun.xml.bind', name: 'jaxb-impl', version: '2.2.11'
    implementation group: 'javax.activation', name: 'activation', version: '1.1.1'

}
